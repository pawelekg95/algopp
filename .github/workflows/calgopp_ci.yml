name: Calgopp_CI
on: push

jobs:
  # Environment
  Calgopp_x86_64_docker:
    name: Calgopp_x86_64_docker
    uses: ./.github/workflows/environment.yml
    with:
      image: calgopp_x86_64
    secrets: inherit

  # Build tests stage
  Build_signal_tests_gcc_debug:
    name: Build_signal_tests_gcc_debug
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/build_tests.yml
    with:
      preset: signal_tests_gcc_debug
      app: Build_signal_tests_gcc_debug
    secrets: inherit

  Build_types_tests_gcc_debug:
    name: Build_types_tests_gcc_debug
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/build_tests.yml
    with:
      preset: types_tests_gcc_debug
      app: Build_types_tests_gcc_debug
    secrets: inherit

  Build_function_tests_gcc_debug:
    name: Build_function_tests_gcc_debug
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/build_tests.yml
    with:
      preset: function_tests_gcc_debug
      app: Build_function_tests_gcc_debug
    secrets: inherit

  Build_approximation_tests_gcc_debug:
    name: Build_approximation_tests_gcc_debug
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/build_tests.yml
    with:
      preset: approximation_tests_gcc_debug
      app: Build_approximation_tests_gcc_debug
    secrets: inherit

  # Test stage
  Signal_test:
    name: Signal_test
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/workflows/test.yml
    with:
      artifacts_name: Build_signal_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
      pre_run: chmod 755 ./dataset_generator.py
    secrets: inherit

  Types_test:
    name: Types_test
    needs: Build_types_tests_gcc_debug
    uses: ./.github/workflows/test.yml
    with:
      artifacts_name: Build_types_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  Function_test:
    name: Function_test
    needs: Build_function_tests_gcc_debug
    uses: ./.github/workflows/test.yml
    with:
      artifacts_name: Build_function_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  Approximation_test:
    name: Approximation_test
    needs: Build_approximation_tests_gcc_debug
    uses: ./.github/workflows/test.yml
    with:
      artifacts_name: Build_approximation_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  # Valgrind tests
  Signal_test_valgrind:
    name: Signal_test_valgrind
    needs: Signal_test
    uses: ./.github/workflows/valgrind.yml
    with:
      artifacts_name: Build_signal_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
      pre_run: chmod 755 ./dataset_generator.py
    secrets: inherit

  Types_test_valgrind:
    name: Types_test_valgrind
    needs: Types_test
    uses: ./.github/workflows/valgrind.yml
    with:
      artifacts_name: Build_types_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  Function_test_valgrind:
    name: Function_test_valgrind
    needs: Function_test
    uses: ./.github/workflows/valgrind.yml
    with:
      artifacts_name: Build_function_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  Approximation_test_valgrind:
    name: Approximation_test_valgrind
    needs: Approximation_test
    uses: ./.github/workflows/valgrind.yml
    with:
      artifacts_name: Build_approximation_tests_gcc_debug-${{ github.sha }}
      test_app: ./tests
    secrets: inherit

  # Quality
  Clang-format:
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/workflows/quality.yml
    with:
      pre_run: cd "${{ github.workspace }}"
      linter: run-clang-format.py
      arguments: -r lib test
    secrets: inherit

  Clang-tidy:
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/workflows/quality.yml
    with:
      pre_run: cd "${{ github.workspace }}"; rm -rf ./cmake-build; mkdir ./cmake-build; cd ./cmake-build; cmake .. --preset signal_tests_clang_debug
      linter: run-clang-tidy
    secrets: inherit

  Dockerfiles-hadolint:
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/quality.yml
    with:
      linter: hadolint
      arguments: --ignore DL3008 $(find . -name *.dockerfile)
    secrets: inherit

  Pylint:
    needs: Calgopp_x86_64_docker
    uses: ./.github/workflows/quality.yml
    with:
      linter: pylint
      arguments: --disable=redefined-outer-name,too-many-arguments $(find . -name *.py)
    secrets: inherit

name: Calgopp_CI
on: push

jobs:
  # Build tests stage
  Build_signal_tests_gcc_debug:
    name: Build_signal_tests_gcc_debug
    uses: ./.github/jobs/build_tests.yml@{ref}
    with:
      preset: signal_tests_gcc_debug
      app: Build_signal_tests_gcc_debug

  Build_signal_tests_gcc_release:
    name: Build_signal_tests_gcc_release
    uses: ./.github/jobs/build_tests.yml@{ref}
    with:
      preset: signal_tests_gcc_release
      app: Build_signal_tests_gcc_release

  Build_signal_tests_clang_debug:
    name: Build_signal_tests_clang_debug
    uses: ./.github/jobs/build_tests.yml@{ref}
    with:
      preset: signal_tests_clang_debug
      app: Build_signal_tests_clang_debug

  Build_signal_tests_clang_release:
    name: Build_signal_tests_clang_release
    uses: ./.github/jobs/build_tests.yml@{ref}
    with:
      preset: signal_tests_clang_release
      app: Build_signal_tests_clang_release

  # Test stage
  Signal_test:
    name: Signal_test
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/jobs/test.yml@{ref}
    with:
      test_app: /tmp/Build_signal_tests_gcc_debug-${{ github.sha }}/bin/tests

  Valgrind:
    needs: Signal_test
    uses: ./.github/jobs/test.yml@{ref}
    with:
      test_app: valgrind --leak-check=full --show-leak-kinds=all --error-exitcode=123 --fair-sched=yes /tmp/Build_signal_tests_gcc_debug-${{ github.sha }}/bin/tests

  # Quality
  Clang-format:
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/jobs/quality.yml@{ref}
    with:
      pre_run: cd ${{ github.workspace }}
      linter: run-clang-format.py
      arguments: -r lib test

  Clang-tidy:
    needs: Build_signal_tests_gcc_debug
    uses: ./.github/jobs/quality.yml@{ref}
    with:
      pre_run: |
        cd ${{ github.workspace }}
        mkdir ./cmake-build
        cd ./cmake-build
        cmake .. --preset signal_tests_clang_debug
      linter: run-clang-tidy
